params {
    input = null
    outdir = null
    tracedir = "${outdir}/pipeline_info"
    mode = null // flye assembly mode: pacbio-raw, pacbio-corr, pacbio-hifi, nano-raw, nano-corr, nano-hq
    reference = null
    gff = null

    // Default resources
    max_memory = '256.GB'
    max_cpus = 32
    max_time = '240.h'
}

profiles {
    mamba {
        conda.enabled = true
        conda.useMamba = true
        docker.enabled = false
    }
    docker {
        conda.enabled = false
        conda.useMamba = false
        docker.enabled = true
        //docker.sudo = true
    }
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

includeConfig 'conf/modules.config'
includeConfig 'conf/base.config'

def check_max(obj, type) {
    switch (type) {
        case 'memory':
            try {
                return (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1) ? params.max_memory as nextflow.util.MemoryUnit : obj
            } catch (all) {
                println "ERROR: Max memory '${params.max_memory}' is not valid! Using default value: $obj"
                return obj
            }
        case 'time':
            try {
                return (obj.compareTo(params.max_time as nextflow.util.Duration) == 1) ? params.max_time as nextflow.util.Duration : obj
            } catch (all) {
                println "ERROR: Max time '${params.max_time}' is not valid! Using default value: $obj"
                return obj
            }
        case 'cpus':
            try {
                return Math.min( obj, params.max_cpus as int )
            } catch (all) {
                println "ERROR: Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
                return obj
            }
        default:
            throw new IllegalArgumentException("Invalid type: $type")
    }
}
